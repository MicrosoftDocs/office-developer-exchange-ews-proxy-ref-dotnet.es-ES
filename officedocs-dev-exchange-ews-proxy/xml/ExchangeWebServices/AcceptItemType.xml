<Type Name="AcceptItemType" FullName="ExchangeWebServices.AcceptItemType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="35389f1722169e96942d2ea9417a18864e577911" />
    <Meta Name="ms.sourcegitcommit" Value="09f9993d313d1e3ec77e21f70573b3fced6eea2e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20612309" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AcceptItemType : ExchangeWebServices.WellKnownResponseObjectType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit AcceptItemType extends ExchangeWebServices.WellKnownResponseObjectType" />
  <TypeSignature Language="DocId" Value="T:ExchangeWebServices.AcceptItemType" />
  <TypeSignature Language="VB.NET" Value="Public Class AcceptItemType&#xA;Inherits WellKnownResponseObjectType" />
  <TypeSignature Language="C++ CLI" Value="public ref class AcceptItemType : ExchangeWebServices::WellKnownResponseObjectType" />
  <AssemblyInfo>
    <AssemblyName>EWS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>ExchangeWebServices.WellKnownResponseObjectType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("code")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlType(Namespace="http://schemas.microsoft.com/exchange/services/2006/types")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0bd7e-101">El <see cref="T:ExchangeWebServices.AcceptItemType" /> clase representa un objeto de respuesta Aceptar que se usa para responder a una reunión de solicitud o elemento de calendario.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0bd7e-101">The <see cref="T:ExchangeWebServices.AcceptItemType" /> class represents an accept response object that is used to reply to a meeting request or calendar item.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="0bd7e-102">
        <para>El <see cref="T:ExchangeWebServices.AcceptItemType" /> objeto se usa para aceptar una convocatoria de reunión o elemento de calendario. Aunque el <see cref="T:ExchangeWebServices.AcceptItemType" /> hereda muchos miembros de muchas clases base, la única propiedad que se ha establecido en el <see cref="T:ExchangeWebServices.AcceptItemType" /> objeto es el <see cref="P:ExchangeWebServices.ResponseObjectCoreType.ReferenceItemId" /> (propiedad).</para>
        <para>
          <b>Nota</b>: un usuario no puede aceptar una convocatoria de reunión o elemento para el que el usuario es el organizador de calendario.</para> Las convocatorias de reunión de 
      <para>tienen un ItemClass de IPM. Schedule.Meeting.Request. para buscar sólo las convocatorias de reunión cuando esté usando las carpetas de búsqueda o consultas FindItem, restringir el conjunto de resultados mediante la propiedad ItemClass.</para><para>Si el <see cref="P:ExchangeWebServices.CreateItemType.MessageDisposition" /> propiedad no está establecida en el <see cref="T:ExchangeWebServices.CreateItemType" />, un <see cref="F:ExchangeWebServices.ResponseCodeType.ErrorMessageDispositionRequired" /> se devolverá el error.</para><para /></span>
      <span class="sxs-lookup">
        <span data-stu-id="0bd7e-102">
          <para>The <see cref="T:ExchangeWebServices.AcceptItemType" /> object is used to accept a meeting request or calendar item. Although the <see cref="T:ExchangeWebServices.AcceptItemType" /> inherits many members from many base classes, the only property that has to be set on the <see cref="T:ExchangeWebServices.AcceptItemType" /> object is the <see cref="P:ExchangeWebServices.ResponseObjectCoreType.ReferenceItemId" /> property.</para>
          <para>
            <b>Note</b>: A user cannot accept a meeting request or calendar item for which the user is the organizer.</para>
          <para>Meeting requests have an ItemClass of IPM.Schedule.Meeting.Request. To find only meeting requests when you are using search folders or FindItem queries, restrict the result set by the ItemClass property.</para>
          <para>If the <see cref="P:ExchangeWebServices.CreateItemType.MessageDisposition" /> property is not set on the <see cref="T:ExchangeWebServices.CreateItemType" />, an <see cref="F:ExchangeWebServices.ResponseCodeType.ErrorMessageDispositionRequired" /> error will be returned.</para>
          <para />
        </span>
      </span>
    </remarks>
    <example>
      <span data-ttu-id="0bd7e-103">
        <para>En el ejemplo siguiente se muestra cómo aceptar una convocatoria de reunión. El identificador del elemento de la convocatoria de reunión se usa en el <see cref="P:ExchangeWebServices.ResponseObjectCoreType.ReferenceItemId" /> (propiedad).</para>
        <code>static void AcceptItem(ExchangeServiceBinding esb)
{
    // Create the request.
    CreateItemType request = new CreateItemType();
    
    // Set the message disposition on the request.
    request.MessageDisposition = MessageDispositionType.SendAndSaveCopy;
    request.MessageDispositionSpecified = true;

    // Create the AcceptItem response object.
    AcceptItemType acceptItem = new AcceptItemType();
    
    // Identify the meeting request to accept.
    acceptItem.ReferenceItemId = new ItemIdType();
    acceptItem.ReferenceItemId.Id = "AAAnAHJheA=";

    // Add the AcceptItem response object to the request.
    request.Items = new NonEmptyArrayOfAllItemsType();
    request.Items.Items = new ItemType[1];
    request.Items.Items[0] = acceptItem;

    // Send the request and get the response.
    CreateItemResponseType response = esb.CreateItem(request);

    ArrayOfResponseMessagesType aormt = response.ResponseMessages;
    ResponseMessageType[] rmta = aormt.Items;

    foreach (ResponseMessageType rmt in rmta)
    {
        ItemInfoResponseMessageType iirmt = (rmt as ItemInfoResponseMessageType);
        if (iirmt.ResponseClass == ResponseClassType.Success)
        {
            Console.WriteLine("Successfully accepted meeting");
        }
    }
}</code>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="0bd7e-103">
          <para>The following example shows you how to accept a meeting request. The item identifier of the meeting request is used in the <see cref="P:ExchangeWebServices.ResponseObjectCoreType.ReferenceItemId" /> property.</para>
          <code>static void AcceptItem(ExchangeServiceBinding esb)
{
    // Create the request.
    CreateItemType request = new CreateItemType();
    
    // Set the message disposition on the request.
    request.MessageDisposition = MessageDispositionType.SendAndSaveCopy;
    request.MessageDispositionSpecified = true;

    // Create the AcceptItem response object.
    AcceptItemType acceptItem = new AcceptItemType();
    
    // Identify the meeting request to accept.
    acceptItem.ReferenceItemId = new ItemIdType();
    acceptItem.ReferenceItemId.Id = "AAAnAHJheA=";

    // Add the AcceptItem response object to the request.
    request.Items = new NonEmptyArrayOfAllItemsType();
    request.Items.Items = new ItemType[1];
    request.Items.Items[0] = acceptItem;

    // Send the request and get the response.
    CreateItemResponseType response = esb.CreateItem(request);

    ArrayOfResponseMessagesType aormt = response.ResponseMessages;
    ResponseMessageType[] rmta = aormt.Items;

    foreach (ResponseMessageType rmt in rmta)
    {
        ItemInfoResponseMessageType iirmt = (rmt as ItemInfoResponseMessageType);
        if (iirmt.ResponseClass == ResponseClassType.Success)
        {
            Console.WriteLine("Successfully accepted meeting");
        }
    }
}</code>
        </span>
      </span>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AcceptItemType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:ExchangeWebServices.AcceptItemType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AcceptItemType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0bd7e-104">El <see cref="T:ExchangeWebServices.AcceptItemType" /> constructor inicializa una nueva instancia de la <see cref="T:ExchangeWebServices.AcceptItemType" /> clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd7e-104">The <see cref="T:ExchangeWebServices.AcceptItemType" /> constructor initializes a new instance of the <see cref="T:ExchangeWebServices.AcceptItemType" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>