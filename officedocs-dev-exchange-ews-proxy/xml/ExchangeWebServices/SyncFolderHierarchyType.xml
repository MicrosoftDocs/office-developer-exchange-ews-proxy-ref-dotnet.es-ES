<Type Name="SyncFolderHierarchyType" FullName="ExchangeWebServices.SyncFolderHierarchyType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d2146ea07c61c14bebb34df6b6946152cc593b07" />
    <Meta Name="ms.sourcegitcommit" Value="09f9993d313d1e3ec77e21f70573b3fced6eea2e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20611559" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SyncFolderHierarchyType : ExchangeWebServices.BaseRequestType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SyncFolderHierarchyType extends ExchangeWebServices.BaseRequestType" />
  <TypeSignature Language="DocId" Value="T:ExchangeWebServices.SyncFolderHierarchyType" />
  <TypeSignature Language="VB.NET" Value="Public Class SyncFolderHierarchyType&#xA;Inherits BaseRequestType" />
  <TypeSignature Language="C++ CLI" Value="public ref class SyncFolderHierarchyType : ExchangeWebServices::BaseRequestType" />
  <AssemblyInfo>
    <AssemblyName>EWS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>ExchangeWebServices.BaseRequestType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("code")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlType(Namespace="http://schemas.microsoft.com/exchange/services/2006/messages")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>El <see cref="T:ExchangeWebServices.SyncFolderHierarchyType" /> clase representa una solicitud para sincronizar una jerarquía de carpetas de cliente con el equipo que ejecuta Microsoft Exchange Server 2007.</summary>
    <remarks>
      <para>Para sincronizar los elementos de cada carpeta, utilice la <see cref="T:ExchangeWebServices.SyncFolderItemsType" /> objeto proxy.</para>
      <para />
    </remarks>
    <example>
      <para>En el ejemplo siguiente se muestra cómo sincronizar una jerarquía de carpetas. Debido a que el <see cref="P:ExchangeWebServices.SyncFolderHierarchyType.SyncState" /> propiedad está establecida, esta jerarquía de carpetas se ha sincronizado antes. Esta operación SyncFolderHierarchy devolverá todos los cambios que se realizaron con respecto a la llamada de sincronización que está representada por el <see cref="P:ExchangeWebServices.SyncFolderHierarchyType.SyncState" /> (propiedad). Esta llamada devolverá todas las propiedades que se definen mediante el <see cref="F:ExchangeWebServices.DefaultShapeNamesType.AllProperties" /> forma de la carpeta.</para>
      <code>static void SyncFolderHierarchy(ExchangeServiceBinding esb)
{ 
    // Create the request.
    SyncFolderHierarchyType &lt;span class="label"&gt;request&lt;/span&gt; = new SyncFolderHierarchyType();

    // Identify the properties that are synchronized.
    FolderResponseShapeType shape = new FolderResponseShapeType();
    shape.BaseShape = DefaultShapeNamesType.AllProperties;

    // Add synchronized properties to request.
    &lt;span class="label"&gt;request&lt;/span&gt;.FolderShape = shape;

    // Add the synchronization state to the request. This
    // property should be null for the initial synchronization.
    &lt;span class="label"&gt;request&lt;/span&gt;.SyncState = "H4sIAAAAAAAEAO29B2AcSZYlJi9tynt/";

    // Send the request and get the response.
    SyncFolderHierarchyResponseType response = esb.SyncFolderHierarchy(&lt;span class="label"&gt;request&lt;/span&gt;);

    ArrayOfResponseMessagesType aormt = response.ResponseMessages;
    ResponseMessageType[] rmta = aormt.Items;

    foreach (ResponseMessageType rmt in rmta)
    {
        if (rmt.ResponseClass == ResponseClassType.Success)
        {
            SyncFolderHierarchyResponseMessageType sfhrmt = rmt as SyncFolderHierarchyResponseMessageType;
            
            // Get the sync state string to use in later synchronization calls.
            string syncState = sfhrmt.SyncState;

            // Get the array of changes that are returned in the response. 
            SyncFolderHierarchyChangesType changeArray = sfhrmt.Changes;

            // This contains the array of folder changes.
            object[] changes = changeArray.Items;

            // This identifies the type of change that occurred on a folder.
            ItemsChoiceType1 changeType; 
            
            for (int count = 0; count &amp;lt; changes.Length; count++)
            {
                // This identifies the type of change that is represented by the objects
                // in the changes object[].
                changeType = changeArray.ItemsElementName[count];

                // Check for the change type of each folder that is returned in the response.
                switch (changeType)
                { 
                    case ItemsChoiceType1.Create:
                        SyncFolderHierarchyCreateOrUpdateType createdFolder = changes[count] as SyncFolderHierarchyCreateOrUpdateType;
                        // TODO: Handle the created folder.
                        if (createdFolder.Item is CalendarFolderType)
                        {
                            // TODO: Cast to calendar folder and handle properties.
                        }
                        else;
                            // TODO: Check and cast to SearchFolderType, TasksFolderType,
                            //       ContactsFolderType, or FolderType.
                        break;

                    case ItemsChoiceType1.Update:
                        SyncFolderHierarchyCreateOrUpdateType updatedFolder = changes[count] as SyncFolderHierarchyCreateOrUpdateType; ;
                        // TODO: Handle the updated folder.    
                        // TODO: Check and cast to one of the five folder types.
                        break;

                    case ItemsChoiceType1.Delete:
                        SyncFolderHierarchyDeleteType deletedFolder = changes[count] as SyncFolderHierarchyDeleteType;
                        // TODO: Get the identifier of the deleted folder.
                        break;
                }
            }
        }
    }
}</code>
      <para>El <see cref="P:ExchangeWebServices.SyncFolderHierarchyResponseMessageType.SyncState" /> (propiedad) devuelto en la respuesta se debe guardar para las solicitudes posteriores de sincronización. También tenga en cuenta que las carpetas que se devuelven en la respuesta se deben convertir al tipo de carpeta apropiada para que la aplicación cliente puede tener acceso a todas las propiedades que están disponibles para cada tipo de carpeta. </para>
      <para>
        <b>Importante</b>: si se devuelven las actualizaciones, la aplicación cliente debe comparar la diferencia entre las carpetas en la respuesta y en el cliente para determinar qué cambios se han producido.</para>
      <para>Debido a que todos los objetos de cambio no tiene el mismo tipo base, se devuelve una matriz de objetos.</para>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyncFolderHierarchyType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:ExchangeWebServices.SyncFolderHierarchyType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyncFolderHierarchyType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>El <see cref="T:ExchangeWebServices.SyncFolderHierarchyType" /> constructor inicializa una nueva instancia de la <see cref="T:ExchangeWebServices.SyncFolderHierarchyType" /> clase.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FolderShape">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.FolderResponseShapeType FolderShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.FolderResponseShapeType FolderShape" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.SyncFolderHierarchyType.FolderShape" />
      <MemberSignature Language="VB.NET" Value="Public Property FolderShape As FolderResponseShapeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::FolderResponseShapeType ^ FolderShape { ExchangeWebServices::FolderResponseShapeType ^ get(); void set(ExchangeWebServices::FolderResponseShapeType ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.FolderResponseShapeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>El <see cref="P:ExchangeWebServices.SyncFolderHierarchyType.FolderShape" /> (propiedad) Obtiene o establece la forma de la carpeta de sincronización que se describe las propiedades que se devuelven en la respuesta. Esta propiedad es obligatoria. Esto es una propiedad de lectura y escritura.</summary>
        <value>La propiedad <see cref="P:ExchangeWebServices.SyncFolderHierarchyType.FolderShape" /> devuelve un objeto <see cref="T:ExchangeWebServices.FolderResponseShapeType" />.</value>
        <remarks>
          <para>Las propiedades posibles que se devuelven para cada carpeta varían según el tipo de carpeta.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncFolderId">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.TargetFolderIdType SyncFolderId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.TargetFolderIdType SyncFolderId" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.SyncFolderHierarchyType.SyncFolderId" />
      <MemberSignature Language="VB.NET" Value="Public Property SyncFolderId As TargetFolderIdType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::TargetFolderIdType ^ SyncFolderId { ExchangeWebServices::TargetFolderIdType ^ get(); void set(ExchangeWebServices::TargetFolderIdType ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.TargetFolderIdType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>El <see cref="P:ExchangeWebServices.SyncFolderHierarchyType.SyncFolderId" /> (propiedad) Obtiene o establece la identidad de la carpeta que contiene los elementos para sincronizar. Esta propiedad es opcional. Esto es una propiedad de lectura y escritura.</summary>
        <value>El valor de la <see cref="P:ExchangeWebServices.SyncFolderHierarchyType.SyncFolderId" /> es una <see cref="T:ExchangeWebServices.TargetFolderIdType" /> objeto.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncState">
      <MemberSignature Language="C#" Value="public string SyncState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SyncState" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.SyncFolderHierarchyType.SyncState" />
      <MemberSignature Language="VB.NET" Value="Public Property SyncState As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SyncState { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>El <see cref="P:ExchangeWebServices.SyncFolderHierarchyType.SyncState" /> (propiedad) Obtiene o establece el identificador de estado de sincronización. Esta propiedad es opcional con advertencias. Esto es una propiedad de lectura y escritura.</summary>
        <value>La propiedad <see cref="P:ExchangeWebServices.SyncFolderHierarchyType.SyncState" /> devuelve una cadena.</value>
        <remarks>
          <para>El <see cref="P:ExchangeWebServices.SyncFolderHierarchyType.SyncState" /> propiedad contiene un valor de tipo string que representa el identificador de estado de sincronización. Este identificador representa un tipo de marca de agua que se describe las carpetas que se han modificado desde la última sincronización. Esta propiedad es opcional cuando se realiza la primera llamada de sincronización. La primera llamada devuelve un <see cref="P:ExchangeWebServices.SyncFolderHierarchyResponseMessageType.SyncState" /> en la respuesta. El valor devuelto <see cref="P:ExchangeWebServices.SyncFolderHierarchyResponseMessageType.SyncState" /> se utiliza en las llamadas posteriores de SyncFolderHierarchy para sincronizar el conjunto de cambios que se ha producido desde la última llamada de sincronización. Por lo tanto, el <see cref="P:ExchangeWebServices.SyncFolderHierarchyType.SyncState" /> (propiedad) es necesario para las llamadas de sincronización incremental.</para>
          <para>
            <b>Nota</b>: si se establece esta propiedad con una cadena no válida, un <see cref="F:ExchangeWebServices.ResponseCodeType.ErrorInvalidSyncStateData" /> es posible que se devolverá el error.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>